#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define FUNC    3
#define MEDIA   4
#define WINNAV  5

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_undo {
            timeout-ms = <50>;
            key-positions = <44 45>;
            bindings = <&kp LC(Z)>;
        };
    };
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    &kp ESC    &kp F1      &kp F2      &kp F3      &kp F4        &kp F5       &kp K_SCROLL_UP      &kp K_PP        &kp F6           &kp F7         &kp F8        &kp F9      &kp F10      &kp BSPC
    &mkp MCLK  &kp Q       &kp W       &kp E       &kp R         &kp T        &kp K_SCROLL_DN      &kp K_VOL_UP    &kp Y            &kp U          &kp I         &kp O      &kp P    &kp BSLH
    &mkp CLK   &kp A       &kp R       &kp S       &kp T         &kp G        &kp K_PG_DN          &kp K_VOL_DN    &kp H            &kp J          &kp K         &kp L       &kp SEMI  &kp SQT
    &mkp RCLK  &kp Z       &kp X       &kp C       &kp V         &kp B        &kp K_PG_UP          &kp C_MUTE      &kp N            &kp M          &kp COMMA     &kp DOT     &kp FSLH    &kp RET
                           &lt FUNC TAB    &kp LGUI    &kp DEL   &kp BSPC  &kp LCTL               &kp LALT         &hm MEDIA SPACE  &hm NAV SPACE  &kp SQT       &kp LBKT
            >;
        };

        nav_layer {
            bindings = <
    &trans     &trans       &trans       &trans      &trans        &trans      &trans               &trans     &trans        &trans       &trans        &trans      &trans      &trans
    &mkp MCLK  &kp ESC      &kp PG_UP    &kp UP      &kp PG_DN     &trans      &trans               &trans     &kp ASTRK     &kp N7       &kp N8        &kp N9      &kp MINUS   &trans
    &mkp LCLK  &kp HOME     &kp LEFT     &kp DOWN    &kp RIGHT     &kp END     &trans               &trans     &kp FSLH      &kp N4       &kp N5        &kp N6      &kp PLUS    &trans
    &mkp RCLK  &trans       &trans       &trans      &trans        &trans      &trans               &trans     &kp EQUAL     &kp N1       &kp N2        &kp N3      &kp N0      &trans
                            &trans       &trans      &trans        &kp DEL     &trans               &trans   &kp SPACE     &kp DOT      &trans        &trans
            >;
        };

        sym_layer {
            bindings = <
    &trans     &trans       &trans       &trans          &trans           &trans        &trans         &trans         &trans        &trans            &trans        &trans      &trans      &trans
    &trans     &kp EXCL     &kp AT       &kp HASH        &kp DLLR         &kp PRCNT     &trans         &trans         &kp CARET     &kp AMPS          &kp ASTRK     &kp UNDER   &kp EQUAL   &trans
    &trans     &kp MINUS    &kp LBKT     &kp LBRC        &kp LPAR         &kp LT        &trans         &trans         &kp GT        &kp RPAR          &kp RBRC      &kp RBKT    &kp PLUS    &trans
    &trans     &kp CAPS     &kp GRAVE    &kp LC(LS(TAB)) &kp LC(LG(LEFT)) &caps_word    &trans         &trans         &trans        &kp LC(LG(RIGHT)) &kp LC(TAB)   &trans      &kp BSLH    &trans
                            &trans       &trans          &trans           &kp RET       &kp DEL        &kp BSPC       &trans        &trans            &trans        &trans
            >;
        };

        func_layer {
            bindings = <
    &trans     &trans       &trans        &trans       &trans        &trans        &trans             &trans     &trans           &trans       &trans        &trans      &trans      &trans
    &trans     &bootloader  &kp LS(PG_UP) &kp LS(UP)   &kp LS(PG_DN) &trans        &trans             &trans     &kp C_PLAY_PAUSE &kp F7       &kp F8        &kp F9      &kp F10     &trans
    &trans     &kp LS(HOME) &kp LS(LEFT)  &kp LS(DOWN) &kp LS(RIGHT) &kp LS(END)   &trans             &trans     &kp K_VOL_UP     &kp F4       &kp F5        &kp F6      &kp F11     &trans
    &trans     &trans       &trans        &trans       &trans        &kp C_MUTE    &trans             &trans     &kp K_VOL_DN     &kp F1       &kp F2        &kp F3      &kp F12     &trans
                            &trans        &trans       &trans        &trans        &trans             &trans     &trans           &kp SPACE    &trans        &trans
            >;
        };

        media_layer {
            bindings = <
    &trans     &trans      &trans         &trans       &trans        &trans        &trans             &trans     &trans             &trans            &trans             &trans         &trans          &trans
    &trans     &trans      &trans         &trans       &trans        &trans        &trans             &trans     &trans             &bt BT_PRV        &bt BT_NXT         &trans         &trans          &trans
    &trans     &trans      &trans         &trans       &trans        &trans        &trans             &trans     &bt BT_CLR         &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2   &bt BT_SEL 3    &trans
    &trans     &trans      &trans         &trans       &trans        &trans        &trans             &trans     &ext_power EP_TOG  &ext_power EP_ON  &ext_power EP_OFF  &out OUT_USB   &out OUT_BLE    &trans
                           &trans         &trans       &trans        &trans        &trans             &trans     &trans             &trans            &trans             &trans
            >;
        };

        winnav_layer {
            bindings = <
    &trans     &trans       &trans       &trans       &trans        &trans        &trans             &trans     &trans      &trans      &trans      &trans      &trans      &trans
    &trans     &trans       &trans       &kp LG(UP)   &trans        &trans        &trans             &trans     &trans      &trans      &trans      &trans      &trans      &trans
    &trans     &trans       &kp LG(LEFT) &kp LG(DOWN) &kp LG(RIGHT) &trans        &trans             &trans     &trans      &trans      &trans      &trans      &trans      &trans
    &trans     &trans       &trans       &trans       &trans        &trans        &trans             &trans     &trans      &trans      &trans      &trans      &trans      &trans
                            &trans       &trans       &trans        &trans        &trans             &trans     &trans      &trans      &trans      &trans
            >;
        };
    };
};
